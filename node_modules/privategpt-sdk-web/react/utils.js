import { streamToReadableStream } from '../utils-stream';
function createChunkDecoder() {
    const decoder = new TextDecoder();
    return function (chunk) {
        if (!chunk)
            return '';
        return decoder.decode(chunk, { stream: true });
    };
}
export async function getAssistantResponse({ fn, args, onNewMessage, abortController, }) {
    const stream = await fn(...args);
    const readableStream = streamToReadableStream(stream);
    const reader = readableStream.getReader();
    const decoder = createChunkDecoder();
    const loopRunner = true;
    let result = '';
    while (loopRunner) {
        const { value, done } = await reader.read();
        if (done) {
            break;
        }
        const decodedChunk = decoder(value);
        if (!decodedChunk)
            continue;
        const completion = JSON.parse(decodedChunk);
        if (completion.choices && completion.choices[0]) {
            result += completion.choices[0].delta?.content;
        }
        onNewMessage?.(completion);
        if (abortController === null) {
            reader.cancel();
            break;
        }
    }
    return result;
}
