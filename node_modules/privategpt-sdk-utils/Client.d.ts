/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from './core';
import { ContextChunks } from './api/resources/contextChunks/client/Client';
import { ContextualCompletions } from './api/resources/contextualCompletions/client/Client';
import { Embeddings } from './api/resources/embeddings/client/Client';
import { Health } from './api/resources/health/client/Client';
import { Ingestion } from './api/resources/ingestion/client/Client';
import { Recipes } from './api/resources/recipes/Client';
export declare namespace PrivategptApiClient {
    interface Options {
        environment: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class PrivategptApiClient {
    protected readonly _options: PrivategptApiClient.Options;
    constructor(_options: PrivategptApiClient.Options);
    protected _contextualCompletions: ContextualCompletions | undefined;
    get contextualCompletions(): ContextualCompletions;
    protected _contextChunks: ContextChunks | undefined;
    get contextChunks(): ContextChunks;
    protected _ingestion: Ingestion | undefined;
    get ingestion(): Ingestion;
    protected _embeddings: Embeddings | undefined;
    get embeddings(): Embeddings;
    protected _recipes: Recipes | undefined;
    get recipes(): Recipes;
    protected _health: Health | undefined;
    get health(): Health;
}
