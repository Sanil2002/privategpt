/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from '../../../../core';
import * as PrivategptApi from '../../..';
export declare namespace Embeddings {
    interface Options {
        environment: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Embeddings {
    protected readonly _options: Embeddings.Options;
    constructor(_options: Embeddings.Options);
    /**
     * Get a vector representation of a given input.
     *
     * That vector representation can be easily consumed
     * by machine learning models and algorithms.
     * @throws {@link PrivategptApi.UnprocessableEntityError}
     *
     * @example
     *     await privategptApi.embeddings.embeddingsGeneration({})
     */
    embeddingsGeneration(request: PrivategptApi.EmbeddingsBody, requestOptions?: Embeddings.RequestOptions): Promise<PrivategptApi.EmbeddingsResponse>;
}
